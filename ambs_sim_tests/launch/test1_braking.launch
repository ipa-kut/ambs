<launch>
    <group ns="ambs">

        <arg name="dest_dir" default="$(env HOME)/ARAIG" />
        <arg name="bot_name" default="ambs_sim_tb3" />

        <rosparam command="load" file="$(find ambs_sim_tests)/config/test1_braking.yaml" />
        <rosparam param="/ambs/log_folder_root" subst_value="True">$(arg dest_dir)</rosparam>
        <rosparam param="/ambs/robot_name" subst_value="True">$(arg bot_name)</rosparam>

        <node pkg="nodelet" type="nodelet" name="base_nodelet_manager" args="manager"  output="screen">
            <param name="num_worker_threads" value="32" />
        </node>


    <!-- Runner (which includes debug logger) -->
        <node pkg="nodelet" type="nodelet" name="test1_braking"
            args="load ambs_runners/Test1BrakingNodelet base_nodelet_manager">
            <remap from="test1_braking/in_start_test" to="event/ui/start_test" />
            <remap from="test1_braking/in_reset_test" to="event/ui/reset_test" />
            <remap from="test1_braking/in_rosbag_began" to="event/rosbagger/rosbag_began" />
            <remap from="test1_braking/out_start_robot" to="event/runner/start_robot" />
            <remap from="test1_braking/out_stop_robot" to="event/runner/stop_robot" />
            <remap from="test1_braking/out_test_completed" to="event/runner/test_completed" />
            <remap from="test1_braking/out_test_succeeded" to="event/runner/test_succeeded" />
            <remap from="test1_braking/out_test_failed" to="event/runner/test_failed" />
            <remap from="test1_braking/robot_is_stationary" to="event/calc/robot_is_stationary" />
            <remap from="test1_braking/robot_has_max_vel" to="event/calc/robot_has_max_vel" />
            <remap from="test1_braking/out_start_rosbag" to="event/runner/start_rosbag" />
        </node>

    <!-- interpreters -->
        <node pkg="nodelet" type="nodelet" name="velocity_interpreter"
        args="load ambs_interpreters/CommandVelocityInterpreterNodelet base_nodelet_manager">
            <remap from="velocity_interpreter/in_activate" to="event/ui/start_test" />
            <remap from="velocity_interpreter/in_deactivate" to="event/ui/reset_test" />
            <remap from="velocity_interpreter/in_start_robot" to="event/runner/start_robot" />
            <remap from="velocity_interpreter/in_stop_robot" to="event/runner/stop_robot" />
            <remap from="velocity_interpreter/out_cmd_vel" to="/cmd_vel" />
        </node>

        <!-- ONLY for TEST use /odom as the location of robot -->
        <node name="focus_pose" pkg="topic_tools" type="transform" 
        args="/odom data/interpreter/location/robot geometry_msgs/PoseStamped 
        'geometry_msgs.msg.PoseStamped(header=std_msgs.msg.Header
        (seq=m.header.seq,stamp=m.header.stamp),pose=m.pose.pose)' --import geometry_msgs std_msgs" />

        <!-- get speed from /odom -->
        <node name="focus_odom_x" pkg="topic_tools" type="transform" 
        args="/odom data/robot/odom/twist/linear_x std_msgs/Float64 'm.twist.twist.linear.x'" />

    <!-- calculators -->
        <!-- robot_reached_max_vel_node -->
        <node pkg="nodelet" type="nodelet" name="calc_robot_has_max_vel"
        args="load ambs_calculators/CompFloatParamNodelet base_nodelet_manager">
            <remap from="calc_robot_has_max_vel/in_start" to="event/runner/start_robot" />
            <remap from="calc_robot_has_max_vel/in_stop" to="event/ui/reset_test" />
            <remap from="calc_robot_has_max_vel/in_reset" to="event/ui/reset_test" />
            <remap from="calc_robot_has_max_vel/in_float" to="data/robot/odom/twist/linear_x" />
            <remap from="calc_robot_has_max_vel/out_comparison" to="event/calc/robot_has_max_vel" />
        </node>

        <!-- robot_is_stationary_node -->
        <node pkg="nodelet" type="nodelet" name="calc_robot_is_stationary"
        args="load ambs_calculators/CompFloatParamNodelet base_nodelet_manager">
            <remap from="calc_robot_is_stationary/in_start" to="event/runner/start_robot" />
            <remap from="calc_robot_is_stationary/in_stop" to="event/ui/reset_test" />
            <remap from="calc_robot_is_stationary/in_reset" to="event/ui/reset_test" />
            <remap from="calc_robot_is_stationary/in_float" to="data/robot/odom/twist/linear_x" />
            <remap from="calc_robot_is_stationary/out_comparison" to="event/calc/robot_is_stationary" />
        </node>

        <!-- braking_distance_node -->
        <node pkg="nodelet" type="nodelet" name="calc_braking_distance"
        args="load ambs_calculators/DiffPoseTemporalNodelet base_nodelet_manager">
            <remap from="calc_braking_distance/in_start" to="event/runner/stop_robot" />
            <remap from="calc_braking_distance/in_stop" to="event/calc/robot_is_stationary" />
            <remap from="calc_braking_distance/in_reset" to="event/ui/reset_test" />
            <remap from="calc_braking_distance/in_pose" to="data/interpreter/location/robot" />
            <remap from="calc_braking_distance/out_diff_position" to="data/calc/braking_distance" />
            <remap from="calc_braking_distance/out_diff_orientation" to="data/calc/braking_angular_offset" />
        </node>

        <!-- braking_time_node -->
        <node pkg="nodelet" type="nodelet" name="calc_braking_time"
        args="load ambs_calculators/StopwatchNodelet base_nodelet_manager">
            <remap from="calc_braking_time/in_start" to="event/runner/stop_robot" />
            <remap from="calc_braking_time/in_stop" to="event/calc/robot_is_stationary" />
            <remap from="calc_braking_time/in_reset" to="event/ui/reset_test" />
            <remap from="calc_braking_time/out_float" to="data/calc/braking_time" />
        </node>

    <!-- Loggers -->
        <!-- folder_bagger_node -->
        <node pkg="ambs_components" type="rosbagger_node" name="test1_rosbagger" output="screen">
            <remap from="in_start" to="event/runner/start_rosbag" />
            <remap from="in_stop" to="event/ui/reset_test" />
            <remap from="in_reset" to="event/ui/reset_test" />
            <remap from="out_rosbag_began" to="event/rosbagger/rosbag_began" />
        </node>

    </group>
</launch>
 
